{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"kilroy-module-client-py-sdk \ud83d\udd17 SDK for kilroy module clients in Python \ud83e\uddf0 Installing \ud83d\udd17 Using pip : pip install kilroy-module-client-py-sdk Usage \ud83d\udd17 from kilroy_module_client_py_sdk import ModuleService service = ModuleService ( host = \"localhost\" , port = 11000 ) await service . get_metadata ()","title":"Home"},{"location":"#kilroy-module-client-py-sdk","text":"SDK for kilroy module clients in Python \ud83e\uddf0","title":"kilroy-module-client-py-sdk"},{"location":"#installing","text":"Using pip : pip install kilroy-module-client-py-sdk","title":"Installing"},{"location":"#usage","text":"from kilroy_module_client_py_sdk import ModuleService service = ModuleService ( host = \"localhost\" , port = 11000 ) await service . get_metadata ()","title":"Usage"},{"location":"usage/","text":"Usage \ud83d\udd17 You can use this package to interact with modules. The easiest way is to use the ModuleService class. It provides a high-level interface to all the methods of the service. All methods are either coroutines or async iterators. Here's an example: from kilroy_module_client_py_sdk import ModuleService service = ModuleService ( host = \"localhost\" , port = 11000 ) await service . get_metadata ()","title":"Usage"},{"location":"usage/#usage","text":"You can use this package to interact with modules. The easiest way is to use the ModuleService class. It provides a high-level interface to all the methods of the service. All methods are either coroutines or async iterators. Here's an example: from kilroy_module_client_py_sdk import ModuleService service = ModuleService ( host = \"localhost\" , port = 11000 ) await service . get_metadata ()","title":"Usage"}]}